{
	"info": {
		"_postman_id": "213d2947-b6cb-4722-8b34-1e02b50bbf6c",
		"name": "Gorest",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "43576499",
		"_collection_link": "https://blue-crater-445761.postman.co/workspace/apitesting~9f506cfb-7178-4508-a9a7-492e0a83ba66/collection/43576499-213d2947-b6cb-4722-8b34-1e02b50bbf6c?action=share&source=collection_link&creator=43576499"
	},
	"item": [
		{
			"name": "Create user",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let randomEmail = `${pm.variables.replaceIn('{{$randomFirstName}}')}${Math.floor(Math.random() * 1000)}@gmail.com`;",
							"pm.environment.set(\"randomEmail\", randomEmail);",
							"",
							"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
							"pm.environment.set(\"firstName\", firstName);",
							"",
							"",
							"let genders = [\"male\", \"female\"];",
							"let gender = genders[Math.floor(Math.random() * genders.length)];",
							"pm.environment.set(\"gender\", gender);",
							"",
							"let statuses = [\"active\", \"inactive\"];",
							"let status = statuses[Math.floor(Math.random() * statuses.length)];",
							"pm.environment.set(\"status\", status);",
							"",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData=pm.response.json();",
							"",
							"pm.environment.set(\"user_id\", jsonData.id);",
							"",
							"postman.setNextRequest(\"Get User\")",
							"",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\"name\":\"{{firstName}}\", \n\"gender\":\"{{gender}}\", \n\"email\":\"{{randomEmail}}\", \n\"status\":\"{{status}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_Url}}",
					"host": [
						"{{base_Url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData=pm.response.json();",
							"",
							"pm.test(\"data validation of json\", ()=>{",
							"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"user_id\"))",
							"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"firstName\"))",
							"    pm.expect(jsonData.email).to.eql(pm.environment.get(\"randomEmail\"))",
							"    pm.expect(jsonData.gender).to.eql(pm.environment.get(\"gender\"))",
							"    pm.expect(jsonData.status).to.eql(pm.environment.get(\"status\"))",
							"})",
							"",
							"",
							"pm.environment.unset(\"randomEmail\");",
							"pm.environment.unset(\"firstName\");",
							"pm.environment.unset(\"gender\");",
							"pm.environment.unset(\"status\");",
							"",
							"postman.setNextRequest(\"Update User\")",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_Url}}/{{user_id}}",
					"host": [
						"{{base_Url}}"
					],
					"path": [
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let randomEmail = `${pm.variables.replaceIn('{{$randomFirstName}}')}${Math.floor(Math.random() * 1000)}@gmail.com`;",
							"pm.environment.set(\"randomEmail\", randomEmail);",
							"",
							"let firstName = pm.variables.replaceIn('{{$randomFirstName}}');",
							"pm.environment.set(\"firstName\", firstName);",
							"",
							"",
							"let genders = [\"male\", \"female\"];",
							"let gender = genders[Math.floor(Math.random() * genders.length)];",
							"pm.environment.set(\"gender\", gender);",
							"",
							"let statuses = [\"active\", \"inactive\"];",
							"let status = statuses[Math.floor(Math.random() * statuses.length)];",
							"pm.environment.set(\"status\", status);",
							"",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData=pm.response.json();",
							"",
							"pm.test(\"data validation of update\", ()=>{",
							"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"user_id\"))",
							"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"firstName\"))",
							"    pm.expect(jsonData.email).to.eql(pm.environment.get(\"randomEmail\"))",
							"    pm.expect(jsonData.gender).to.eql(pm.environment.get(\"gender\"))",
							"    pm.expect(jsonData.status).to.eql(pm.environment.get(\"status\"))",
							"})",
							"",
							"pm.environment.unset(\"randomEmail\");",
							"pm.environment.unset(\"firstName\");",
							"pm.environment.unset(\"gender\");",
							"pm.environment.unset(\"status\");",
							"",
							"postman.setNextRequest(\"Delete User\")",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\"name\":\"{{firstName}}\", \n\"gender\":\"{{gender}}\", \n\"email\":\"{{randomEmail}}\", \n\"status\":\"{{status}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_Url}}/{{user_id}}",
					"host": [
						"{{base_Url}}"
					],
					"path": [
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"204 response\", ()=>{",
							"    pm.response.to.have.status(204)",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\"name\":\"Tenali Ramakrishna\", \n\"gender\":\"male\", \n\"email\":\"tenali.ramakrishna@15ce.com\", \n\"status\":\"active\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_Url}}/{{user_id}}",
					"host": [
						"{{base_Url}}"
					],
					"path": [
						"{{user_id}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "dc56e6b6ebaea7f7ade852e7949d19f990f2e1e8c2794d4a7246aef7cc179c0c",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_Url",
			"value": "https://gorest.co.in//public/v2/users",
			"type": "string"
		}
	]
}